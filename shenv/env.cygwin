#!/bin/bash

# {{{ Create personal Log directory
export LOG_DIR="${HOME}/.cache/log"
/usr/bin/mkdir -p "$LOG_DIR"

_log "env.Cygwin"
# }}}
# {{{ pathmunge: Add paths to PATH as needed
pathmunge() {
  # If the new directory is already in our PATH skip it
  case "$:${PATH}:" in
    *:"$1":*)
      ;;
    *)
      if [ "$2" == "after" ];then
        PATH="$PATH":$(/bin/cygpath "$1")
      else
        PATH=$(/bin/cygpath "$1"):"$PATH"
      fi
  esac
}

# }}}
# {{{ Local aliases
alias start='cygstart'
alias explore='cygstart -x'

alias ifconfig='ipconfig'
# }}}
# {{{ OS environment
_log "USER: $USER"
_log "USERPROFILE: $USERPROFILE"
export USERNAME="$USER"
if [ -z "$USERPROFILE" ]
then
  export USERPROFILE="C:/Users/smartin"
fi

export TMP="/c/Users/smartin/AppData/Local/Temp"
export TEMP="/c/Users/smartin/AppData/Local/Temp"
export TMPDIR='/var/tmp'
export CYGWIN="nodosfilewarning"

if [[ -d "/c/Python311" ]]; then
  PYTHON_HOME="/c/Python311"
  PATH="$PYTHON_HOME:$PYTHON_HOME/Scripts:$PATH"
  pathmunge "$PYTHON_HOME"
  pathmunge "$PYTHON_HOME/Scripts"
fi
export TZ="$(/usr/bin/tzset)"

if [ -z "$JAVA_HOME" ];then
  if [ -d /usr/local/java ];then
    export JAVA_HOME='/usr/local/java'
  fi
  pathmunge "$JAVA_HOME/bin"
fi
export GROOVY_HOME="/usr/local/groovy"
export CLASSPATH="$CLASSPATH:."
export ANT_HOME="/usr/share/ant"

export NODE_MODULES="$HOME/node_modules"

if [ -z "$GOPATH" ];then
  if [ -d "/c/Users/smartin/go" ];then
    export GOPATH="C:/Users/smartin/go"
  elif [ -d "/c/cygwin64/home/smartin/src/gocode" ];then
    export GOPATH="C:/cygwin64/home/smartin/src/gocode"
  elif [ -d "/d/cygwin64/home/smartin/src/gocode" ];then
    export GOPATH="D:/cygwin64/home/smartin/src/gocode"
  fi
  PATH="$GOPATH/bin:$PATH"
fi

# Adding Microsoft.NET to path
DOTNET=$(/usr/bin/ls -rt /c/Windows/Microsoft.NET/Framework64 | /bin/tail -1)
PATH="${PATH}:/c/Windows/Microsoft.NET/Framework64/${DOTNET}"

# Adding NodeJS variables:
# source "/d/Apps/nodejs/nv" &> /dev/null

# The global environment variable doesn't work for this:
export SVN_SSH="/bin/ssh -q"

# Prefer English UTF-8
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

export MANPAGER="less -X"

# Establish Ruby's documenter uses Ansi formatting:
export RI='-f ansi'

# Login timeout disabled
export TMOUT=0

# Inserted before current path
# So last one ends up being first on PATH
for var in "$ANT_HOME" "$HOME"; do
  if [ -n "$var" ]; then
    if [ -d "${var}/bin" ] && [ -r "${var}/bin" ]; then
      pathmunge "${var}/bin"
    else
      _log "No bin in %s\n" "${var}"
    fi
  fi
done

# pathmunge "/home/smartin/src/gocode/bin"

# Add these after the rest of the PATH
for var in "$GROOVY_HOME" "$MYSQL_HOME"; do
  [ -z "$var" ] && continue
  if [[ -d "${var}/bin" ]] && [[ -r "${var}/bin" ]];then
    pathmunge "${var}/bin" after
  fi
done

pathmunge /sbin
pathmunge /usr/sbin

# We want /usr/local to be up front so we get vim9, we'll remove the duplicate in a bit
# Cannot use pathmunge because it checks for dupes
PATH="/usr/local/bin:$PATH"
# }}}
# {{{ Remove duplicates from PATH
# special handling to ignore case for Windows
low_PATH="$(tr '[:upper:]' '[:lower:]' <<<$PATH )"

if [ -n "$PATH" ]; then
  old_PATH=$PATH:; PATH= ; lPATH=
  while [ -n "$old_PATH" ]; do
    x=${old_PATH%%:*}       # the first remaining entry
    l=${low_PATH%%:*}       # The lowercase we compare
    case $lPATH: in
      *:"$l":*) ;;          # already there? Do nothing
      *) PATH=$PATH:$x      # not there yet? Add it
         lPATH=$lPATH:$l;;
    esac
    old_PATH=${old_PATH#*:} # Next entry
    low_PATH=${low_PATH#*:}
  done
  PATH=${PATH#:}
  unset old_PATH x low_PATH lPATH l
fi
export PATH
# }}}
# {{{ Find VIM

HAVE_VIM=$(command -v vim)

if [ -n "$HAVE_VIM" ]; then
  EDITOR="$HAVE_VIM"
else
  if [ -f '/usr/local/bin/vim' ]; then
    EDITOR='/usr/local/bin/vim'
  else
    EDITOR='/bin/vim'
  fi
fi
export EDITOR
# }}}
# {{{ Add oh-my-posh prompt
OMP="$(command -v oh-my-posh)"

if [[ -n "$OMP" ]];then
  dotfiles="$(dirname $(readlink "$HOME/.bashrc"))"
  if command -v cygpath &> /dev/null ; then
    OH_CONFIG="$(cygpath -m ${dotfiles}/config.omp.json)"
  else
    OH_CONFIG="${dotfiles}/config.omp.json"
  fi
  _log "OH_CONFIG: $OH_CONFIG"
  eval "$("${OMP}" init bash --config "${OH_CONFIG}")"
fi

unset pathmunge
alias viwt='vim /c/Users/smartin/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_8wekyb3d8bbwe/LocalState/settings.json'
# }}}
