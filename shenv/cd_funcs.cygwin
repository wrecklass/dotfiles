#!/bin/bash

alias cdark="_cdark"
alias cd2="_cd2"
alias cda="_cda"
alias cdah="_cdah"
alias cdahk="_cdah"
alias cdb="_cdb"
alias cdc="_cdc"
alias cdd="_cdd"
alias cdo="_cdot"
alias cdot="_cdot"
alias cde="_cde"
alias cdf="_cdf"
alias cdg="_cdg"
alias cdgo="_cdgo"
alias cdm="_cdm"
alias cdn="_cdn"
alias cdl="_cdl"
alias cdz="_cdl" # To match #z:: from AHK
alias cdp="_cdp"
alias cdr="_cdr"
alias cdrep="_cdrep"
alias cds="_cds"
alias cdt="_cdt"
alias cdsa="_cdsa"
alias cdsm="_cdsm"
alias cdst="_cdst"
alias cdu="_cdu"
alias cdv="_cdv"
# alias cdw="_cdw"
# alias cdwi="_cdwi"
alias cdx="_cdx"
alias cdxp="_cdx"
alias cdw="_cdw"
alias mkcd="_mkcd"

alias cd="cd_func"

PROGDIR="$(cygpath "$PROGRAMFILES")"
export PROGDIR

PROGDIR_X86="${PROGDIR} (x86)"
export PROGDIR_X86

# ctrl-w shows the menu
# bind -x "\"\C-w\":cd_func -- ;"

_cd2() {
    if [ $# -gt 0 ]; then
        cd_func "$(cygpath --sysdir)/${*}"
    else
        cd_func "$(cygpath --sysdir)/"
    fi
}

_cda() {
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/AppData/${*}"
    else
        cd_func "$USERPROFILE/AppData/"
    fi
}

_cdah() {
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/Nextcloud/scripts/${*}"
    else
        cd_func "$USERPROFILE/Nextcloud/scripts/"
    fi
}

_cdb() {
    if [[ -d "/c/Users/smartin/AppData/Local/Larian Studios/Baldur's Gate 3" ]];then
      cd_func "/c/Users/smartin/AppData/Local/Larian Studios/Baldur's Gate 3"
    fi
}

_cdc() {
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/Saved Games/CD Projekt Red/${*}"
    else
        cd_func "$USERPROFILE/Saved Games/CD Projekt Red/"
    fi
}

_cds() {
    if [ $# -gt 0 ]; then
        cd_func "/home/${USER}/src/${*}"
    else
        cd_func "/home/${USER}/src"
    fi
}

_cdsm() {
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/AppData/Roaming/microsoft/windows/start menu/${*}"
    else
        cd_func "$USERPROFILE/AppData/Roaming/microsoft/windows/start menu"
    fi
}


_cdt() {
  if [[ -n "$ChocolateyToolsLocation" ]] && [[ -d  "$ChocolateyToolsLocation" ]];then
    if [ $# -gt 0 ]; then
      cd_func "$ChocolateyToolsLocation/${*}"
    else
      cd_func "$ChocolateyToolsLocation"
    fi
  else
    echo "Chocolatey does not appear to be installed."
  fi
}

_cdd() {
    if [ $# -gt 0 ]; then
        cd_func "$(cygpath --mydocs)/${*}"
    else
        cd_func "$(cygpath --mydocs)"
    fi
}

_cdot() {
    dir="$(dirname $(readlink "$HOME/.bashrc"))"
    if [ $# -gt 0 ]; then
        cd_func "$dir/${*}"
    else
        cd_func "$dir"
    fi
}

_cde() {
    if [ $# -gt 0 ]; then
        cd_func "$(cygpath --desktop)/${*}"
    else
        cd_func "$(cygpath --desktop)"
    fi
}

_cdf() {
    if [ $# -gt 0 ]; then
        cd_func "/c/Users/smartin/Projects/FlaskBlog/${*}"
    else
        cd_func "/c/Users/smartin/Projects/FlaskBlog/"
    fi
}

_cdg() {
    if [ $# -gt 0 ]; then
        cd_func "$HOME/src/github/${*}"
    else
        cd_func "$HOME/src/github"
    fi
}

_cdgo() {
    if [ $# -gt 0 ]; then
        cd_func "$HOME/src/gocode/${*}"
    else
        cd_func "$HOME/src/gocode"
    fi
}

_cdm() {
   if [ -d "/d/Users/${USER}/Music" ];then
    if [ $# -gt 0 ]; then
        cd_func "/d/Users/${USER}/Music/${*}"
    else
        cd_func "/d/Users/${USER}/Music"
    fi
  elif [ -d "$USERPROFILE/Music" ];then
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/Music/${*}"
    else
        cd_func "$USERPROFILE/Music"
    fi
  fi
}

_cdn() {
   if [ -d "/d/Users/${USER}/NextCloud" ];then
    if [ $# -gt 0 ]; then
        cd_func "/d/Users/${USER}/NextCloud/${*}"
    else
        cd_func "/d/Users/${USER}/NextCloud"
    fi
  elif [ -d "$USERPROFILE/NextCloud" ];then
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/NextCloud/${*}"
    else
        cd_func "$USERPROFILE/NextCloud"
    fi
  fi
}

_cdl() {
  if [ -d "/d/Users/${USER}/Downloads/" ];then
    if [ $# -gt 0 ]; then
        cd_func "/d/Users/${USER}/Downloads/${*}"
    else
        cd_func "/d/Users/${USER}/Downloads/"
    fi
  elif [ -d "$USERPROFILE/Downloads/" ];then
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/Downloads/${*}"
    else
        cd_func "$USERPROFILE/Downloads/"
    fi
  fi
}

_cdp() {
    if [ $# -gt 0 ]; then
        cd_func "/c/Users/smartin/Projects/${*}"
    else
        cd_func "/c/Users/smartin/Projects/"
    fi
}

_cdr() {
    if [ -d "$USERPROFILE/Dropbox" ];then
        if [ $# -gt 0 ]; then
            cd_func "$USERPROFILE/Dropbox/${*}"
        else
            cd_func "$USERPROFILE/Dropbox/"
        fi
        return
    elif [ -d "/d/Users/${USER}/Dropbox" ];then
        if [ $# -gt 0 ]; then
            cd_func "/d/Users/${USER}/Dropbox/${*}"
        else
            cd_func "/d/Users/${USER}/Dropbox/"
        fi
        return
    fi
}

_cdrep() {
    if [ -d "/c/Apps/World_Of_Warships_NA/replays" ];then
        if [ $# -gt 0 ]; then
            cd_func "/c/Apps/World_Of_Warships_NA/replays/${*}"
        else
            cd_func "/c/Apps/World_Of_Warships_NA/replays/"
        fi
        return
    elif [ -d "/d/Apps/World_Of_Warships_NA/replays" ];then
        if [ $# -gt 0 ]; then
            cd_func "/d/Apps/World_Of_Warships_NA/replays/${*}"
        else
            cd_func "/d/Apps/World_Of_Warships_NA/replays/"
        fi
        return
    fi
}

_cdark() {
  if [ -d "/e/Apps/SteamLibrary/steamapps/common/" ];then
    cd_func "/e/Apps/SteamLibrary/steamapps/common/"
  elif [ -d "/f/SteamLibrary/steamapps/common/" ];then
    cd_func "/f/SteamLibrary/steamapps/common/"
  elif [ -d "/d/Apps/SteamLibrary/steamapps/common/" ];then
    cd_func "/d/Apps/SteamLibrary/steamapps/common/"
  fi
}

_cdsa() {
  if [ -d "/d/apps/steam/steamapps" ];then
    if [ $# -gt 0 ]; then
      cd_func "/d/apps/steam/steamapps/${*}"
    else
      cd_func "/d/apps/steam/steamapps/"
    fi
  elif [ -d "/c/apps/steam/steamapps" ];then
    if [ $# -gt 0 ]; then
      cd_func "/c/apps/steam/steamapps/${*}"
    else
      cd_func "/c/apps/steam/steamapps/"
    fi
  elif [ -d "/d/apps/steamlibrary/steamapps" ];then
    if [ $# -gt 0 ]; then
      cd_func "/d/apps/steamlibrary/steamapps/${*}"
    else
      cd_func "/d/apps/steamlibrary/steamapps/"
    fi
  fi
}

_cdst() {
  if [ -d "/c/apps/steamapps" ];then
    if [ $# -gt 0 ]; then
      cd_func "/c/apps/steamapps/${*}"
    else
      cd_func "/c/apps/steamapps/"
    fi
  fi
}

_cdu() {
  if [ -d "/d/Users/${USER}" ];then
    if [ $# -gt 0 ]; then
        cd_func "/d/Users/${USER}/${*}"
    else
        cd_func "/d/Users/${USER}"
    fi
  elif [ -d "$USERPROFILE" ];then
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/${*}"
    else
        cd_func "$USERPROFILE"
    fi
  fi
}

_cdv() {
   if [ -d "/d/Users/${USER}/Videos" ];then
    if [ $# -gt 0 ]; then
        cd_func "/d/Users/${USER}/Videos/${*}"
    else
        cd_func "/d/Users/${USER}/Videos"
    fi
  elif [ -d "$USERPROFILE/Videos" ];then
    if [ $# -gt 0 ]; then
        cd_func "$USERPROFILE/Videos/${*}"
    else
        cd_func "$USERPROFILE/Videos"
    fi
  fi
}

# _cdw() {
#   if [ -d "/d/apps/World of Warcraft/" ];then
#     if [ $# -gt 0 ]; then
#         cd_func "/d/apps/World of Warcraft/${*}"
#     else
#         cd_func "/d/apps/World of Warcraft"
#     fi
#   elif [ -d "/c/apps/World of Warcraft/" ];then
#     if [ $# -gt 0 ]; then
#         cd_func "/c/apps/World of Warcraft/${*}"
#     else
#         cd_func "/c/apps/World of Warcraft"
#     fi
#   elif [ -d "/e/apps/World of Warcraft/" ];then
#     if [ $# -gt 0 ]; then
#         cd_func "/e/apps/World of Warcraft/${*}"
#     else
#         cd_func "/e/apps/World of Warcraft"
#     fi
#   fi
# }
#
# _cdwi() {
#   if [ -d "/d/apps/World of Warcraft/Interface" ];then
#     if [ $# -gt 0 ]; then
#         cd_func "/d/apps/World of Warcraft/Interface/${*}"
#     else
#         cd_func "/d/apps/World of Warcraft/Interface"
#     fi
#   elif [ -d "/c/apps/World of Warcraft/Interface" ];then
#     if [ $# -gt 0 ]; then
#         cd_func "/c/apps/World of Warcraft/Interface/${*}"
#     else
#         cd_func "/c/apps/World of Warcraft/Interface"
#     fi
#   fi
# }

_cdw() {
    if [ $# -gt 0 ]; then
        cd_func "$(cygpath --windir)/${*}"
    else
        cd_func "$(cygpath --windir)"
    fi
}

_mkcd() {
    mkdir -p "$*"
    cd_func "$*"
}

alias cdst="_cdst"

_cdst() {
  if [ -d "/d/apps/steam" ];then
    if [ $# -gt 0 ]; then
      cd_func "/d/Apps/Steam/${*}"
    else
      cd_func "/d/Apps/Steam/"
    fi
  fi
  if [ -d "/d/apps/Steamlibrary" ];then
    if [ $# -gt 0 ]; then
      cd_func "/d/Apps/Steamlibrary/${*}"
    else
      cd_func "/d/Apps/Steamlibrary/"
    fi
  fi
}

# function cd_func
# This function defines a 'cd' replacement function capable of keeping,
# displaying and accessing history of visited directories, up to 10 entries.
# To use it, uncomment it, source this file and try 'cd --'.
# acd_func 1.0.5, 10-nov-2004
# Petar Marinov, http:/geocities.com/h2428, this is public domain

cd_func() {
    local x2 the_new_dir adir index
    local -i cnt

    if [[ $1 == "--" ]]; then
        dirs -v
        return 0
    fi

    the_new_dir=$1
    [[ -z $1 ]] && the_new_dir=$HOME

    if [[ ${the_new_dir:0:1} == '-' ]]; then
        #
        # When argument is '-N' Extract dir N from dirs
        index=${the_new_dir:1}
        [[ -z $index ]] && index=1
        adir=$(dirs +$index)
        [[ -z $adir ]] && return 1
        the_new_dir=$adir
    fi

    #
    # '~' has to be substituted by ${HOME}
    [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"

    #
    # Now change to the new dir and add to the top of the stack
    pushd "${the_new_dir}" > /dev/null || return
    # settitle "-$(basename $SHELL) : ${PWD/$HOME/'~'}" 2>/dev/null
    the_new_dir=$(pwd)

    #
    # Trim down everything beyond 11th entry
    popd -n +11 2>/dev/null 1>/dev/null

    #
    # Remove any other occurence of this dir, skipping the top of the stack
    for ((cnt=1; cnt <= 10; cnt++)); do
        x2="$(dirs +${cnt} 2>/dev/null)" || return 0
        # [[ $? -ne 0 ]] && return 0
        [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
        if [[ "${x2}" == "${the_new_dir}" ]]; then
            popd -n +$cnt 2>/dev/null 1>/dev/null
            cnt=$((cnt-1))
        fi
    done

    # settitle "-$(basename $SHELL) : ${PWD/$HOME/'~'}"
    return 0
}

