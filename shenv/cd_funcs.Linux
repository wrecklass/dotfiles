#!/bin/bash

alias cdd="_cdd"
alias cde="_cde"
alias cdl="_cdl"
alias mkcd="_mkcd"
alias cd="cd_func"

_cdd() {
    if [ $# -gt 0 ]; then
        cd_func "/home/${USER}/Documents/${*}"
    else
        cd_func "/home/${USER}/Documents/"
    fi
}

_cde() {
    if [ $# -gt 0 ]; then
        cd_func "/home/${USER}/Desktop/${*}"
    else
        cd_func "/home/${USER}/Desktop/"
    fi
}

_cdl() {
    if [ $# -gt 0 ]; then
        cd_func "/home/${USER}/Downloads/${*}"
    else
        cd_func "/home/${USER}/Downloads/"
    fi
}

_mkcd() {
    mkdir -p "$*"
    cd_func "$*"
}

# function cd_func
# This function defines a 'cd' replacement function capable of keeping,
# displaying and accessing history of visited directories, up to 10 entries.
# To use it, uncomment it, source this file and try 'cd --'.
# acd_func 1.0.5, 10-nov-2004
# Petar Marinov, http:/geocities.com/h2428, this is public domain

cd_func() {
    local x2 the_new_dir adir index
    local -i cnt

    if [[ $1 == "--" ]]; then
        dirs -v
        return 0
    fi

    the_new_dir=$1
    [[ -z $1 ]] && the_new_dir=$HOME
    
    if [[ ${the_new_dir:0:1} == '-' ]]; then
        #
        # When argument is '-N' Extract dir N from dirs
        index=${the_new_dir:1}
        [[ -z $index ]] && index=1
        adir=$(dirs +$index)
        [[ -z $adir ]] && return 1
        the_new_dir=$adir
    fi

    #
    # '~' has to be substituted by ${HOME}
    [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"

    #
    # Now change to the new dir and add to the top of the stack
    pushd "${the_new_dir}" > /dev/null
    [[ $? -ne 0 ]] && return 1
    the_new_dir=$(pwd)

    #
    # Trim down everything beyond 11th entry
    popd -n +11 2>/dev/null 1>/dev/null

    #
    # Remove any other occurence of this dir, skipping the top of the stack
    for ((cnt=1; cnt <= 10; cnt++)); do
        x2=$(dirs +${cnt} 2>/dev/null)
        [[ $? -ne 0 ]] && return 0
        [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
        if [[ "${x2}" == "${the_new_dir}" ]]; then
            popd -n +$cnt 2>/dev/null 1>/dev/null
            cnt=cnt-1
        fi
    done

    return 0
}

