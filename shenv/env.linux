#!/bin/bash

# {{{ Local Environment

WSL=false
if [ -e/proc/sys/fs/binfmt_misc/WSLInterop ]; then
  WSL=true
fi

export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-arm64"
export GROOVY_HOME="/usr/share/groovy"
export ANT_HOME="/usr/share/ant"
export MYSQL_HOME="/usr/local/mysql"
export GOROOT
if [[ -d "$HOME/src/github/go-1.20" ]];then
  GOROOT="$HOME/src/github/go-1.20"
elif [[ -d "/usr/lib/go" ]];then
  GOROOT="/usr/lib/go"
elif [[ -d "/usr/lib/golang" ]];then
  GOROOT="/usr/lib/golang"
fi
export GOPATH="$HOME/src/gocode"
export GOBIN="$GOPATH/bin"

# Prefer English UTF-8
export LANGUAGE="en_US.UTF-8"

export MANPAGER="less -X"
export TMP="/tmp"
export TEMP="/tmp"
# }}}
# {{{ Add local bin dirs
for dir in "/usr/local" "$JAVA_HOME" "$GOROOT" "$HOME" "$GOPATH" ".local" "$M2_HOME";do
  [[ -z ${dir} ]] && continue
  [[ -d "${dir}/bin" ]] && PATH="$dir/bin:$PATH"
done
# }}}
# {{{ Find VIM
HAVE_VIM=$(command -v vim)

EDITOR='/bin/vim'
if [ -n "$HAVE_VIM" ];then
  EDITOR="$HAVE_VIM"
fi
export EDITOR
# }}}
# {{{ Remove duplicates from PATH
# special handling to ignore case for Windows
low_PATH="$(tr '[:upper:]' '[:lower:]' <<<"$PATH" )"

if [ -n "$PATH" ]; then
  # shellcheck disable=SC2123
  old_PATH=$PATH:; PATH= ; lPATH=
  while [ -n "$old_PATH" ]; do
    x=${old_PATH%%:*}       # the first remaining entry
    l=${low_PATH%%:*}       # The lowercase we compare
    case $lPATH: in
      *:"$l":*) ;;          # already there? Do nothing
      *) PATH=$PATH:$x      # not there yet? Add it
         lPATH=$lPATH:$l;;
    esac
    old_PATH=${old_PATH#*:} # Next entry
    low_PATH=${low_PATH#*:}
  done
  PATH=${PATH#:}
  unset old_PATH x low_PATH lPATH l
fi
export PATH
# }}}
# {{{ Set Prompt
function _update_ps1() {
  PS1=$("$GOPATH/bin/powerline-go" -colorize-hostname -modules "$POWERLINE_MODULES" -error $? -cwd-mode plain )
}

function _update_ps1a() {
  PS1=$("$HOME/bin/powerline-go" -modules "$POWERLINE_MODULES" -error $? -colorize-hostname -cwd-mode plain )
}

# Modules available: aws,cwd,docker,dotenv,duration,exit,git,gitlite,hg,host,jobs,kube,load,newline,nix-shell,node,perlbrew,perms,root,shell-var,ssh,svn,termtitle,terraform-workspace,time,user,venv,vgo
export POWERLINE_MODULES="user,host,ssh,cwd,perms,jobs,newline,git,hg,exit,root"

if [[ "${TERM}" != "linux" ]]; then
  OMP="$(command -v oh-my-posh)"
  if [[ -n "$OMP" ]];then
    dotfiles="$(dirname "$(readlink "$HOME/.profile")")"
    OH_CONFIG="${dotfiles}/config.omp.json"
    eval "$($OMP init bash --config "$OH_CONFIG")"
  else
    if [ -f "$GOPATH/bin/powerline-go" ]; then
      PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
    elif [ -f "$HOME/bin/powerline-go" ]; then
      PROMPT_COMMAND="_update_ps1a; $PROMPT_COMMAND"
    fi
  fi
else
  # shellcheck source=/dev/null
  source "$HOME/.bash_prompt"
fi
# }}}
# {{{ For VLC:
export LD_LIBRARY_PATH=/usr/lib/vlc
export VLC_PLUGIN_PATH=${LD_LIBRARY_PATH}/plugins
# vim: tabstop=2 shiftwidth=2 expandtab
# }}}
